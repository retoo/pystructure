/* Generated By:JJTree: Do not edit this line. X:\org.python.pydev.parser\src\org\python\pydev\parser\grammar24\PythonGrammar24TreeConstants.java */

package org.python.pydev.parser.grammar24;

public interface PythonGrammar24TreeConstants
{
  public int JJTSINGLE_INPUT = 0;
  public int JJTFILE_INPUT = 1;
  public int JJTEVAL_INPUT = 2;
  public int JJTFUNCDEF = 3;
  public int JJTDECORATORS = 4;
  public int JJTBEGIN_DECORATOR = 5;
  public int JJTVOID = 6;
  public int JJTEXTRAARGLIST = 7;
  public int JJTEXTRAKEYWORDLIST = 8;
  public int JJTDEFAULTARG = 9;
  public int JJTTUPLE = 10;
  public int JJTAUG_PLUS = 11;
  public int JJTAUG_MINUS = 12;
  public int JJTAUG_MULTIPLY = 13;
  public int JJTAUG_DIVIDE = 14;
  public int JJTAUG_FLOORDIVIDE = 15;
  public int JJTAUG_MODULO = 16;
  public int JJTAUG_AND = 17;
  public int JJTAUG_OR = 18;
  public int JJTAUG_XOR = 19;
  public int JJTAUG_LSHIFT = 20;
  public int JJTAUG_RSHIFT = 21;
  public int JJTAUG_POWER = 22;
  public int JJTEXPR_STMT = 23;
  public int JJTPRINTEXT_STMT = 24;
  public int JJTPRINT_STMT = 25;
  public int JJTDEL_STMT = 26;
  public int JJTBEGIN_DEL_STMT = 27;
  public int JJTPASS_STMT = 28;
  public int JJTBREAK_STMT = 29;
  public int JJTCONTINUE_STMT = 30;
  public int JJTRETURN_STMT = 31;
  public int JJTBEGIN_RETURN_STMT = 32;
  public int JJTYIELD_STMT = 33;
  public int JJTRAISE_STMT = 34;
  public int JJTIMPORT = 35;
  public int JJTIMPORTFROM = 36;
  public int JJTDOTTED_AS_NAME = 37;
  public int JJTDOTTED_NAME = 38;
  public int JJTIMPORT_AS_NAME = 39;
  public int JJTGLOBAL_STMT = 40;
  public int JJTEXEC_STMT = 41;
  public int JJTASSERT_STMT = 42;
  public int JJTIF_STMT = 43;
  public int JJTBEGIN_IF_STMT = 44;
  public int JJTBEGIN_ELIF_STMT = 45;
  public int JJTWHILE_STMT = 46;
  public int JJTBEGIN_WHILE_STMT = 47;
  public int JJTBEGIN_ELSE_STMT = 48;
  public int JJTFOR_STMT = 49;
  public int JJTBEGIN_FOR_STMT = 50;
  public int JJTBEGIN_FOR_ELSE_STMT = 51;
  public int JJTTRY_STMT = 52;
  public int JJTTRYFINALLY_STMT = 53;
  public int JJTBEGIN_TRY_STMT = 54;
  public int JJTBEGIN_TRY_ELSE_STMT = 55;
  public int JJTBEGIN_FINALLY_STMT = 56;
  public int JJTEXCEPT_CLAUSE = 57;
  public int JJTBEGIN_EXCEPT_CLAUSE = 58;
  public int JJTSUITE = 59;
  public int JJTOR_BOOLEAN = 60;
  public int JJTAND_BOOLEAN = 61;
  public int JJTNOT_1OP = 62;
  public int JJTCOMPARISION = 63;
  public int JJTLESS_CMP = 64;
  public int JJTGREATER_CMP = 65;
  public int JJTEQUAL_CMP = 66;
  public int JJTGREATER_EQUAL_CMP = 67;
  public int JJTLESS_EQUAL_CMP = 68;
  public int JJTNOTEQUAL_CMP = 69;
  public int JJTIN_CMP = 70;
  public int JJTNOT_IN_CMP = 71;
  public int JJTIS_NOT_CMP = 72;
  public int JJTIS_CMP = 73;
  public int JJTOR_2OP = 74;
  public int JJTXOR_2OP = 75;
  public int JJTAND_2OP = 76;
  public int JJTLSHIFT_2OP = 77;
  public int JJTRSHIFT_2OP = 78;
  public int JJTADD_2OP = 79;
  public int JJTSUB_2OP = 80;
  public int JJTMUL_2OP = 81;
  public int JJTDIV_2OP = 82;
  public int JJTFLOORDIV_2OP = 83;
  public int JJTMOD_2OP = 84;
  public int JJTPOS_1OP = 85;
  public int JJTNEG_1OP = 86;
  public int JJTINVERT_1OP = 87;
  public int JJTPOW_2OP = 88;
  public int JJTCALL_OP = 89;
  public int JJTINDEX_OP = 90;
  public int JJTDOT_OP = 91;
  public int JJTLIST = 92;
  public int JJTDICTIONARY = 93;
  public int JJTSTR_1OP = 94;
  public int JJTSTRJOIN = 95;
  public int JJTLAMBDEF = 96;
  public int JJTSUBSCRIPTLIST = 97;
  public int JJTELLIPSES = 98;
  public int JJTSLICE = 99;
  public int JJTCOLON = 100;
  public int JJTCOMMA = 101;
  public int JJTLIST_FOR = 102;
  public int JJTCLASSDEF = 103;
  public int JJTEXTRAARGVALUELIST = 104;
  public int JJTEXTRAKEYWORDVALUELIST = 105;
  public int JJTKEYWORD = 106;
  public int JJTNUM = 107;
  public int JJTCOMPLEX = 108;
  public int JJTNAME = 109;
  public int JJTSTRING = 110;
  public int JJTUNICODE = 111;


  public String[] jjtNodeName = {
    "single_input",
    "file_input",
    "eval_input",
    "funcdef",
    "decorators",
    "begin_decorator",
    "void",
    "ExtraArgList",
    "ExtraKeywordList",
    "defaultarg",
    "tuple",
    "aug_plus",
    "aug_minus",
    "aug_multiply",
    "aug_divide",
    "aug_floordivide",
    "aug_modulo",
    "aug_and",
    "aug_or",
    "aug_xor",
    "aug_lshift",
    "aug_rshift",
    "aug_power",
    "expr_stmt",
    "printext_stmt",
    "print_stmt",
    "del_stmt",
    "begin_del_stmt",
    "pass_stmt",
    "break_stmt",
    "continue_stmt",
    "return_stmt",
    "begin_return_stmt",
    "yield_stmt",
    "raise_stmt",
    "Import",
    "ImportFrom",
    "dotted_as_name",
    "dotted_name",
    "import_as_name",
    "global_stmt",
    "exec_stmt",
    "assert_stmt",
    "if_stmt",
    "begin_if_stmt",
    "begin_elif_stmt",
    "while_stmt",
    "begin_while_stmt",
    "begin_else_stmt",
    "for_stmt",
    "begin_for_stmt",
    "begin_for_else_stmt",
    "try_stmt",
    "tryfinally_stmt",
    "begin_try_stmt",
    "begin_try_else_stmt",
    "begin_finally_stmt",
    "except_clause",
    "begin_except_clause",
    "suite",
    "or_boolean",
    "and_boolean",
    "not_1op",
    "comparision",
    "less_cmp",
    "greater_cmp",
    "equal_cmp",
    "greater_equal_cmp",
    "less_equal_cmp",
    "notequal_cmp",
    "in_cmp",
    "not_in_cmp",
    "is_not_cmp",
    "is_cmp",
    "or_2op",
    "xor_2op",
    "and_2op",
    "lshift_2op",
    "rshift_2op",
    "add_2op",
    "sub_2op",
    "mul_2op",
    "div_2op",
    "floordiv_2op",
    "mod_2op",
    "pos_1op",
    "neg_1op",
    "invert_1op",
    "pow_2op",
    "Call_Op",
    "Index_Op",
    "Dot_Op",
    "list",
    "dictionary",
    "str_1op",
    "strjoin",
    "lambdef",
    "subscriptlist",
    "Ellipses",
    "Slice",
    "Colon",
    "Comma",
    "list_for",
    "classdef",
    "ExtraArgValueList",
    "ExtraKeywordValueList",
    "Keyword",
    "Num",
    "Complex",
    "Name",
    "String",
    "Unicode",
  };
}
